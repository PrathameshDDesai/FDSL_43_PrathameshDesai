#include <stdio.h>
#include <stdlib.h>

struct node {
    int data;
    struct node *next;
};

struct node *top = NULL, *temp, *newnode;

void push(int data) {
    newnode = malloc(sizeof(struct node));
    if (newnode == NULL) {
        printf("Memory allocation failed\n");
        return;
    }
    newnode->data = data;
    newnode->next = NULL;
    
    if (top == NULL) {
        top = newnode;
    } else {
        temp = top;
        top = newnode;
        newnode->next = temp;
    }
    printf("Data %d pushed to stack.\n", data);
}

void pop() {
    if (top == NULL) {
        printf("Stack is empty.\n");
    } else {
        temp = top;
        top = top->next;
        printf("Popped data: %d\n", temp->data);
        free(temp);
        temp->next = NULL ; 
    }
}

void display() {
    if (top == NULL) {
        printf("Stack is empty.\n");
    } else {
        temp = top;
        while (temp != NULL) {
            printf("%d -> ", temp->data);
            temp = temp->next;
        }
        printf("NULL\n");
}
}
int main() {
    int choice, data;
printf("-------WELLCOME TO STACK USING SINGLY LINK LIST ------");
    while (1) {
        printf("\n1. Push data\n2. Pop data\n3. Display stack\n4. Exit\nEnter choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter data: ");
                scanf("%d", &data);
                push(data);
                break;
            case 2:
                pop();
                break;
            case 3:
                display();
                break;
            case 4:
                printf("Exiting.\n");
                return 0;
            default:
                printf("Invalid choice.\n");
        }
    }
    
    return 0;
}
